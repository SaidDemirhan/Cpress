öncelikle bilgisayarimizda vscode uygulamasi ve node.js programi kurulu olmalidir. nodejs.org

masaüstünde bir dosya ac
  ismi kücük harflerle 
    my-cypress-framework
    olabilir
sürükleyerek VS ya birak

new terminal ac
npm init -y 
yaz ve eneter a bas
    "npm", "Node Package Manager" (Node Paket Yöneticisi) anlamına gelir.

json dosyasi olustu

cypress i yüklemek icin npm install --save-dev cypress 

yükleme tamamlandiktan sonra terminalde Cypress in acilip acilmadigini görmek icin
npx cypress open
yazarak enter tusuna basalim
    "npx", "Node Package Execute" (Node Paketini Çalıştır) anlamına gelir ve Node.js'in bir parçasıdır. 

cpress in arayüzü gelmis olmasi lazim

***Eger gelmiyorsa manuel calistirmak icin cypress.io sayfasindan dosyayi indirip zip ten cikartip cy sembollu dosyayi aciyoruz
onun icine de cypress proje klosorunu sürüklüyoruz ve istenilen testi oradan calistiriyoruz.

örnegin:
calisip calismadigini denemek icin testler kismindaki integrationtests bölününden
2. dosya olan 2-advanced-examples kismindaki ilk action.spec.js testine tiklanabilir.

Artik kolayca testlerimizi olusturabiliriz.

Dosya yapisi olarak:
MY_CYPRESS_FRAMEWORK
  cypress
    fixtures
      example.json
          Her zaman kullanilabilecek olan sifre email vs gibi verileri depolariz ve istendiginde kullaniriz.
    integration
          Testlerimizin bulundugu klosordur.
          tesleri kaydedecegimiz dosyanin adi com.techproed gibi olabilir.
          bu klosörün icine yeni file ekliyoruz ve uzantisi mutlaka .js olmali (day01_login_testi.js)
    plugins
      index.js
          https://www.npmjs.com/ sitesinde bir cok yararli plugin bulunuyor.
          Örneğin, raporlama eklentileri kullanarak, test sonuçlarını daha anlaşılır bir şekilde sunabilirsiniz. 
    support
      commands.js
          icerigindeki adrese gidilirse her tür test kodunun nasil yazilacagi örneklerle yazilmis.
      index.js
  node_Modules
          Cypress in kullandigi arayuzun iceriginin oldugu bolum.
  cypress.json
          tüm yapilandirma ayarlarini buraya kaydedebiliyoruz.
          mesela standart bekleme süresini 
            "defaultCommandTimeout": 4000,
          yazarak 4 saniyeye cikarabiliriz. veya
            "cromeWebSecurity": false
          yazarsak güvenli olmayan siteye veya bir iframe de erisebiliriz.
  package-lock.json
          Dependency lerin yüklü oldugu dosyalar
  package.json
